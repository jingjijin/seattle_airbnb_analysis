{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import libraries\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from datetime import datetime\n",
    "from sklearn.base import TransformerMixin\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "% matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "listing = pd.read_csv('listings.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['id', 'listing_url', 'scrape_id', 'last_scraped', 'name', 'summary',\n",
       "       'space', 'description', 'experiences_offered', 'neighborhood_overview',\n",
       "       'notes', 'transit', 'thumbnail_url', 'medium_url', 'picture_url',\n",
       "       'xl_picture_url', 'host_id', 'host_url', 'host_name', 'host_since',\n",
       "       'host_location', 'host_about', 'host_response_time',\n",
       "       'host_response_rate', 'host_acceptance_rate', 'host_is_superhost',\n",
       "       'host_thumbnail_url', 'host_picture_url', 'host_neighbourhood',\n",
       "       'host_listings_count', 'host_total_listings_count',\n",
       "       'host_verifications', 'host_has_profile_pic', 'host_identity_verified',\n",
       "       'street', 'neighbourhood', 'neighbourhood_cleansed',\n",
       "       'neighbourhood_group_cleansed', 'city', 'state', 'zipcode', 'market',\n",
       "       'smart_location', 'country_code', 'country', 'latitude', 'longitude',\n",
       "       'is_location_exact', 'property_type', 'room_type', 'accommodates',\n",
       "       'bathrooms', 'bedrooms', 'beds', 'bed_type', 'amenities', 'square_feet',\n",
       "       'price', 'weekly_price', 'monthly_price', 'security_deposit',\n",
       "       'cleaning_fee', 'guests_included', 'extra_people', 'minimum_nights',\n",
       "       'maximum_nights', 'calendar_updated', 'has_availability',\n",
       "       'availability_30', 'availability_60', 'availability_90',\n",
       "       'availability_365', 'calendar_last_scraped', 'number_of_reviews',\n",
       "       'first_review', 'last_review', 'review_scores_rating',\n",
       "       'review_scores_accuracy', 'review_scores_cleanliness',\n",
       "       'review_scores_checkin', 'review_scores_communication',\n",
       "       'review_scores_location', 'review_scores_value', 'requires_license',\n",
       "       'license', 'jurisdiction_names', 'instant_bookable',\n",
       "       'cancellation_policy', 'require_guest_profile_picture',\n",
       "       'require_guest_phone_verification', 'calculated_host_listings_count',\n",
       "       'reviews_per_month'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "listing.columns # see what features are in the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# For more concise analysis, only include features that are most relevant and interesting\n",
    "\n",
    "listing_less = listing[['host_response_time','host_response_rate', 'host_acceptance_rate','host_is_superhost',\n",
    "                        'host_total_listings_count','host_has_profile_pic', 'host_identity_verified','neighbourhood', \n",
    "                        'neighbourhood_cleansed','neighbourhood_group_cleansed', 'zipcode',\n",
    "                        'is_location_exact', 'property_type', 'room_type', 'accommodates','bathrooms', 'bedrooms', \n",
    "                        'beds', 'bed_type', 'amenities', 'square_feet','price', 'weekly_price', 'monthly_price', \n",
    "                        'security_deposit','cleaning_fee', 'guests_included', 'extra_people', 'minimum_nights',\n",
    "                        'maximum_nights','availability_30', 'availability_60', \n",
    "                        'availability_90','availability_365', 'number_of_reviews','review_scores_rating',\n",
    "                        'review_scores_accuracy', 'review_scores_cleanliness','review_scores_checkin', \n",
    "                        'review_scores_communication','review_scores_location', 'review_scores_value', \n",
    "                        'requires_license','instant_bookable','cancellation_policy', 'require_guest_profile_picture',\n",
    "                        'require_guest_phone_verification', 'calculated_host_listings_count','reviews_per_month']].copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>datatype</th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>host_response_time</td>\n",
       "      <td>object</td>\n",
       "      <td>within a few hours</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>host_response_rate</td>\n",
       "      <td>object</td>\n",
       "      <td>96%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>host_acceptance_rate</td>\n",
       "      <td>object</td>\n",
       "      <td>100%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>host_is_superhost</td>\n",
       "      <td>object</td>\n",
       "      <td>f</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>host_total_listings_count</td>\n",
       "      <td>float64</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>host_has_profile_pic</td>\n",
       "      <td>object</td>\n",
       "      <td>t</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>host_identity_verified</td>\n",
       "      <td>object</td>\n",
       "      <td>t</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>neighbourhood</td>\n",
       "      <td>object</td>\n",
       "      <td>Queen Anne</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>neighbourhood_cleansed</td>\n",
       "      <td>object</td>\n",
       "      <td>West Queen Anne</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>neighbourhood_group_cleansed</td>\n",
       "      <td>object</td>\n",
       "      <td>Queen Anne</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>zipcode</td>\n",
       "      <td>object</td>\n",
       "      <td>98119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>is_location_exact</td>\n",
       "      <td>object</td>\n",
       "      <td>t</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>property_type</td>\n",
       "      <td>object</td>\n",
       "      <td>Apartment</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>room_type</td>\n",
       "      <td>object</td>\n",
       "      <td>Entire home/apt</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>accommodates</td>\n",
       "      <td>int64</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>bathrooms</td>\n",
       "      <td>float64</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>bedrooms</td>\n",
       "      <td>float64</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>beds</td>\n",
       "      <td>float64</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>bed_type</td>\n",
       "      <td>object</td>\n",
       "      <td>Real Bed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>amenities</td>\n",
       "      <td>object</td>\n",
       "      <td>{TV,\"Cable TV\",Internet,\"Wireless Internet\",\"A...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>square_feet</td>\n",
       "      <td>float64</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>price</td>\n",
       "      <td>object</td>\n",
       "      <td>$85.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>weekly_price</td>\n",
       "      <td>object</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>monthly_price</td>\n",
       "      <td>object</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>security_deposit</td>\n",
       "      <td>object</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>cleaning_fee</td>\n",
       "      <td>object</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>guests_included</td>\n",
       "      <td>int64</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>extra_people</td>\n",
       "      <td>object</td>\n",
       "      <td>$5.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>minimum_nights</td>\n",
       "      <td>int64</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>maximum_nights</td>\n",
       "      <td>int64</td>\n",
       "      <td>365</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>availability_30</td>\n",
       "      <td>int64</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>availability_60</td>\n",
       "      <td>int64</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>availability_90</td>\n",
       "      <td>int64</td>\n",
       "      <td>71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>availability_365</td>\n",
       "      <td>int64</td>\n",
       "      <td>346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>number_of_reviews</td>\n",
       "      <td>int64</td>\n",
       "      <td>207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>review_scores_rating</td>\n",
       "      <td>float64</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>review_scores_accuracy</td>\n",
       "      <td>float64</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>review_scores_cleanliness</td>\n",
       "      <td>float64</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>review_scores_checkin</td>\n",
       "      <td>float64</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>review_scores_communication</td>\n",
       "      <td>float64</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>review_scores_location</td>\n",
       "      <td>float64</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>review_scores_value</td>\n",
       "      <td>float64</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>requires_license</td>\n",
       "      <td>object</td>\n",
       "      <td>f</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>instant_bookable</td>\n",
       "      <td>object</td>\n",
       "      <td>f</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>cancellation_policy</td>\n",
       "      <td>object</td>\n",
       "      <td>moderate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>require_guest_profile_picture</td>\n",
       "      <td>object</td>\n",
       "      <td>f</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>require_guest_phone_verification</td>\n",
       "      <td>object</td>\n",
       "      <td>f</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>calculated_host_listings_count</td>\n",
       "      <td>int64</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>reviews_per_month</td>\n",
       "      <td>float64</td>\n",
       "      <td>4.07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               index datatype  \\\n",
       "0                 host_response_time   object   \n",
       "1                 host_response_rate   object   \n",
       "2               host_acceptance_rate   object   \n",
       "3                  host_is_superhost   object   \n",
       "4          host_total_listings_count  float64   \n",
       "5               host_has_profile_pic   object   \n",
       "6             host_identity_verified   object   \n",
       "7                      neighbourhood   object   \n",
       "8             neighbourhood_cleansed   object   \n",
       "9       neighbourhood_group_cleansed   object   \n",
       "10                           zipcode   object   \n",
       "11                 is_location_exact   object   \n",
       "12                     property_type   object   \n",
       "13                         room_type   object   \n",
       "14                      accommodates    int64   \n",
       "15                         bathrooms  float64   \n",
       "16                          bedrooms  float64   \n",
       "17                              beds  float64   \n",
       "18                          bed_type   object   \n",
       "19                         amenities   object   \n",
       "20                       square_feet  float64   \n",
       "21                             price   object   \n",
       "22                      weekly_price   object   \n",
       "23                     monthly_price   object   \n",
       "24                  security_deposit   object   \n",
       "25                      cleaning_fee   object   \n",
       "26                   guests_included    int64   \n",
       "27                      extra_people   object   \n",
       "28                    minimum_nights    int64   \n",
       "29                    maximum_nights    int64   \n",
       "30                   availability_30    int64   \n",
       "31                   availability_60    int64   \n",
       "32                   availability_90    int64   \n",
       "33                  availability_365    int64   \n",
       "34                 number_of_reviews    int64   \n",
       "35              review_scores_rating  float64   \n",
       "36            review_scores_accuracy  float64   \n",
       "37         review_scores_cleanliness  float64   \n",
       "38             review_scores_checkin  float64   \n",
       "39       review_scores_communication  float64   \n",
       "40            review_scores_location  float64   \n",
       "41               review_scores_value  float64   \n",
       "42                  requires_license   object   \n",
       "43                  instant_bookable   object   \n",
       "44               cancellation_policy   object   \n",
       "45     require_guest_profile_picture   object   \n",
       "46  require_guest_phone_verification   object   \n",
       "47    calculated_host_listings_count    int64   \n",
       "48                 reviews_per_month  float64   \n",
       "\n",
       "                                                    0  \n",
       "0                                  within a few hours  \n",
       "1                                                 96%  \n",
       "2                                                100%  \n",
       "3                                                   f  \n",
       "4                                                   3  \n",
       "5                                                   t  \n",
       "6                                                   t  \n",
       "7                                          Queen Anne  \n",
       "8                                     West Queen Anne  \n",
       "9                                          Queen Anne  \n",
       "10                                              98119  \n",
       "11                                                  t  \n",
       "12                                          Apartment  \n",
       "13                                    Entire home/apt  \n",
       "14                                                  4  \n",
       "15                                                  1  \n",
       "16                                                  1  \n",
       "17                                                  1  \n",
       "18                                           Real Bed  \n",
       "19  {TV,\"Cable TV\",Internet,\"Wireless Internet\",\"A...  \n",
       "20                                                NaN  \n",
       "21                                             $85.00  \n",
       "22                                                NaN  \n",
       "23                                                NaN  \n",
       "24                                                NaN  \n",
       "25                                                NaN  \n",
       "26                                                  2  \n",
       "27                                              $5.00  \n",
       "28                                                  1  \n",
       "29                                                365  \n",
       "30                                                 14  \n",
       "31                                                 41  \n",
       "32                                                 71  \n",
       "33                                                346  \n",
       "34                                                207  \n",
       "35                                                 95  \n",
       "36                                                 10  \n",
       "37                                                 10  \n",
       "38                                                 10  \n",
       "39                                                 10  \n",
       "40                                                  9  \n",
       "41                                                 10  \n",
       "42                                                  f  \n",
       "43                                                  f  \n",
       "44                                           moderate  \n",
       "45                                                  f  \n",
       "46                                                  f  \n",
       "47                                                  2  \n",
       "48                                               4.07  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check the dtypes of features\n",
    "pd.merge(pd.DataFrame(listing_less.dtypes,columns=['datatype']).reset_index(),\n",
    "         pd.DataFrame(pd.DataFrame(listing_less.iloc[0]).reset_index()),on='index')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['98119', '98109', '98107', '98117', nan, '98103', '98105', '98115',\n",
       "       '98101', '98122', '98112', '98144', '99\\n98122', '98121', '98102',\n",
       "       '98199', '98104', '98134', '98136', '98126', '98146', '98116',\n",
       "       '98177', '98118', '98108', '98133', '98106', '98178', '98125'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "listing_less.zipcode.unique() # check unique zipcode"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "listing_less.zipcode.replace('99\\n98122','98122',inplace=True) # fix an encoding error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# convert/transform strings to numeric\n",
    "\n",
    "listing_less.price = listing_less.price.apply(lambda x: x if x is np.NAN else float(x[1:].replace(',','')))\n",
    "listing_less.weekly_price = listing_less.weekly_price.apply(lambda x: x if x is np.NAN else float(x[1:].replace(',','')))\n",
    "listing_less.monthly_price = listing_less.monthly_price.apply(lambda x: x if x is np.NAN else float(x[1:].replace(',','')))\n",
    "listing_less.security_deposit = listing_less.security_deposit.apply(lambda x: x if x is np.NAN else float(x[1:].replace(',','')))\n",
    "listing_less.host_response_rate = listing_less.host_response_rate.apply(lambda x: x if x is np.NAN else float(x[:-1]))\n",
    "listing_less.host_acceptance_rate = listing_less.host_acceptance_rate.apply(lambda x: x if x is np.NAN else float(x[:-1]))\n",
    "listing_less.cleaning_fee = listing_less.cleaning_fee.apply(lambda x: x if x is np.NAN else float(x[1:]))\n",
    "listing_less.extra_people = listing_less.extra_people.apply(lambda x: x if x is np.NAN else float(x[1:]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "number_of_reviews                   0.000000\n",
       "require_guest_profile_picture       0.000000\n",
       "amenities                           0.000000\n",
       "bed_type                            0.000000\n",
       "availability_365                    0.000000\n",
       "instant_bookable                    0.000000\n",
       "calculated_host_listings_count      0.000000\n",
       "accommodates                        0.000000\n",
       "room_type                           0.000000\n",
       "requires_license                    0.000000\n",
       "price                               0.000000\n",
       "is_location_exact                   0.000000\n",
       "neighbourhood_group_cleansed        0.000000\n",
       "neighbourhood_cleansed              0.000000\n",
       "extra_people                        0.000000\n",
       "minimum_nights                      0.000000\n",
       "maximum_nights                      0.000000\n",
       "availability_30                     0.000000\n",
       "availability_60                     0.000000\n",
       "require_guest_phone_verification    0.000000\n",
       "availability_90                     0.000000\n",
       "guests_included                     0.000000\n",
       "cancellation_policy                 0.000000\n",
       "beds                                0.000262\n",
       "property_type                       0.000262\n",
       "host_identity_verified              0.000524\n",
       "host_has_profile_pic                0.000524\n",
       "host_total_listings_count           0.000524\n",
       "host_is_superhost                   0.000524\n",
       "bedrooms                            0.001572\n",
       "zipcode                             0.001833\n",
       "bathrooms                           0.004191\n",
       "neighbourhood                       0.108958\n",
       "host_response_rate                  0.136983\n",
       "host_response_time                  0.136983\n",
       "reviews_per_month                   0.164222\n",
       "review_scores_rating                0.169460\n",
       "review_scores_communication         0.170508\n",
       "review_scores_cleanliness           0.171032\n",
       "review_scores_location              0.171556\n",
       "review_scores_value                 0.171818\n",
       "review_scores_accuracy              0.172342\n",
       "review_scores_checkin               0.172342\n",
       "host_acceptance_rate                0.202462\n",
       "cleaning_fee                        0.269775\n",
       "weekly_price                        0.473808\n",
       "security_deposit                    0.511262\n",
       "monthly_price                       0.602672\n",
       "square_feet                         0.974594\n",
       "dtype: float64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# see percentage of missing values in each feature column.\n",
    "listing_less.isnull().mean().sort_values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# drop features with more than 40% missing values.\n",
    "listing_less = listing_less.drop(['weekly_price','security_deposit','monthly_price','square_feet'],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Imputation on columns with less than 40% missing values.\n",
    "# Code modified from https://stackoverflow.com/questions/25239958/impute-categorical-missing-values-in-scikit-learn\n",
    "# Basically, categorical variables imputed with most frequent value and numerical variables imputed with mean.\n",
    "\n",
    "class DataFrameImputer(TransformerMixin):\n",
    "    def __init__(self):\n",
    "        pass\n",
    "    \n",
    "    def fit(self, X, y=None):\n",
    "        self.fill = pd.Series([X[c].value_counts().index[0]\n",
    "            if X[c].dtype == np.dtype('O') else X[c].mean() for c in X], index=X.columns)\n",
    "        return self\n",
    "\n",
    "    def transform(self, X, y=None):\n",
    "        return X.fillna(self.fill)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# impute values using function above\n",
    "\n",
    "df = DataFrameImputer().fit_transform(listing_less)\n",
    "df2 = df.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# get dummy variables for categorical features\n",
    "\n",
    "df2 = pd.get_dummies(df2, columns=['neighbourhood','neighbourhood_cleansed',\n",
    "                             'neighbourhood_group_cleansed','zipcode','is_location_exact',\n",
    "                             'property_type','room_type','bed_type',\n",
    "                             'host_is_superhost','host_has_profile_pic','host_identity_verified',\n",
    "                             'is_location_exact','requires_license','instant_bookable',\n",
    "                             'require_guest_profile_picture','require_guest_phone_verification'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['within a few hours' 'within an hour' 'within a day' 'a few days or more']\n",
      "['moderate' 'strict' 'flexible']\n"
     ]
    }
   ],
   "source": [
    "print(df2.host_response_time.unique())\n",
    "print(df2.cancellation_policy.unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# transform ordinal categorical features\n",
    "\n",
    "mapper1 = {'within an hour':0, 'within a few hours':1, 'within a day':2, 'a few days or more':3}\n",
    "df2['host_response_time'] = df2['host_response_time'].replace(mapper1)\n",
    "df2['host_response_time'] = pd.factorize(df2['host_response_time'])[0]\n",
    "\n",
    "mapper2 = {'flexible':0, 'moderate':1, 'strict':2}\n",
    "df2['cancellation_policy'] = df2['cancellation_policy'].replace(mapper2)\n",
    "df2['cancellation_policy'] = pd.factorize(df2['cancellation_policy'])[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3818, 283)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next, I will run a random forest regressor to see what features are important for popularity of the house/apt in Seattle. Here I will use reviews per month, instead of total number of reviews, as an indicator of popularity, since the number of reviews is heavily dependent on how long the hosts have been renting the house/apt. Therefore, in order not to be biased by this factor, I will use the reviews per month as target."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df2.drop(['reviews_per_month','amenities'],axis=1) # amenities will be analyzed later\n",
    "y = df2['reviews_per_month']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.grid_search import GridSearchCV\n",
    "\n",
    "rf = RandomForestRegressor(random_state=0)\n",
    "parameters = {'n_estimators': [300, 400, 500],\n",
    "               'max_depth': [20, 30, 40],\n",
    "               'min_samples_split': [2, 3],\n",
    "               'min_samples_leaf': [1, 2]}\n",
    "\n",
    "grid = GridSearchCV(estimator = rf, param_grid = parameters, cv = 5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=5, error_score='raise',\n",
       "       estimator=RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,\n",
       "           max_features='auto', max_leaf_nodes=None,\n",
       "           min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "           min_samples_leaf=1, min_samples_split=2,\n",
       "           min_weight_fraction_leaf=0.0, n_estimators=10, n_jobs=1,\n",
       "           oob_score=False, random_state=0, verbose=0, warm_start=False),\n",
       "       fit_params={}, iid=True, n_jobs=1,\n",
       "       param_grid={'n_estimators': [300, 400, 500], 'max_depth': [20, 30, 40], 'min_samples_split': [2, 3], 'min_samples_leaf': [1, 2]},\n",
       "       pre_dispatch='2*n_jobs', refit=True, scoring=None, verbose=0)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grid.fit(X, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'max_depth': 20,\n",
       " 'min_samples_leaf': 1,\n",
       " 'min_samples_split': 2,\n",
       " 'n_estimators': 300}"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grid.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>feature</th>\n",
       "      <th>importance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>number_of_reviews</td>\n",
       "      <td>0.443251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>minimum_nights</td>\n",
       "      <td>0.065653</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>cleaning_fee</td>\n",
       "      <td>0.0334445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>availability_30</td>\n",
       "      <td>0.0327587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>price</td>\n",
       "      <td>0.0304142</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              feature importance\n",
       "18  number_of_reviews   0.443251\n",
       "12     minimum_nights   0.065653\n",
       "9        cleaning_fee  0.0334445\n",
       "14    availability_30  0.0327587\n",
       "8               price  0.0304142"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# see 5 most important features that contribute to number of reviews per month\n",
    "\n",
    "importance_t = pd.DataFrame(data=[X.columns,grid.best_estimator_.feature_importances_]).T\n",
    "importance_t.columns = ['feature','importance']\n",
    "importance_t.sort_values(by='importance',ascending=False)[:5]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Apparently, house/apt with more monthly reviews have more total reviews! Besides, we can see that price is an important factor for popularity (which is again not very surprising). For most of the properties, cleaning fee is  included in the price, so the higher the cleaning fee, the higher the price. Therefore, it makes sense both the price and cleaning fee are on top 5 list. 30 day-availability also play a key role in popularity. We will check out these features using some graphs below!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average review rating: 94.53926206244176\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Let's first see the distrinution of the overall ratings.\n",
    "\n",
    "df.review_scores_rating.hist(bins=30);\n",
    "print('Average review rating:', df.review_scores_rating.mean())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's go back to the first step that I decided to use number of reviews per month as the indicator for popularity instead of total sales (which we do not have info about) or overall rating. Here is a brief explanation of why I did not use the rating score as the target for my random forest regressor. As we can see from the rating distribution as well as average score (94.5) above, the rating itself is not a very good indication of popularity/satisfaction for the house/apt because people tend to be very generous about the ratings they gave. Therefore, I came up with a new indicator of the popularity, which is the number of reviews received each month. If we assume most people leave good ratings along with written reviews (as we see from the rating distribution), it is reasonable to believe that properties with lots of reviews are the ones that are nice and popular. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['reviews_per_month'].hist(bins=30)\n",
    "plt.title('Distribution of No. of reviews/month');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It looks like monthly review is distributed between 0 and 12, with a great number of properties having about 2 reviews per month.\n",
    "\n",
    "In order to simplify visualization of the relationship between popularity and other features, I will divide all \n",
    "properties into 3 groups according to their popularity (reviews per month). The division will be made based on \n",
    "percentiles, therefore there will be equal (or very similar if not) number of properties in each groups. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "# the properties were divided into 3 groups based on their popularity (reviews they got per month)\n",
    "\n",
    "df['popularity'] = pd.qcut(df['reviews_per_month'],3,labels=['low','medium','high'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(df['popularity'],palette='coolwarm') # see how many house/apt fall in each group\n",
    "plt.title('Popularity counts');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we have three popularity groups. Next, let's look at one of the important feature we discovered from random forest feature importance analysis - minimum nights required for stay."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=df.popularity,y=df.minimum_nights,palette='coolwarm') # see average apt/house price in each group\n",
    "plt.title('Miniumn nights');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The ones with lowest popularity require longest minimum stay (with a huge error bar though), suggesting that people\n",
    "prefer flexible policy on their stay.\n",
    "\n",
    "Next, let's see the price for each popularity type."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=df.popularity,y=df.cleaning_fee,palette='coolwarm') # see cleaning fee in each group\n",
    "plt.title('Cleaning fee');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=df.popularity,y=df.price,palette='coolwarm') # see average price in each group\n",
    "plt.title('Price');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Interestingly, we can see a clear pattern here that people like to rent house/apt with low price.\n",
    "\n",
    "Then how about availability?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=df.popularity,y=df.availability_30,palette='coolwarm') # see 30 day availability in each group\n",
    "plt.title('Availability 30 days');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Of course, not all properties are available for entire month for rent because some people only rent their house/apt when they are not around. And it makes sense that these type of properties received less reviews because they had less guests/visits. Thus, it is hard to know for what reason the properties were not available (could be already rent out or just not available), but there is a slight trend that they are more popular if they have greater availability.\n",
    "\n",
    "Next, we assumed that most listings on airbnb website generally received good ratings regardless of their popularity. But is it really that case?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=df.popularity,y=df.review_scores_rating,palette='coolwarm') # see average rating in each group\n",
    "plt.title('Review scores');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Yes, it is!!! So hosts, please keep in mind that number of reviews is more important than scores, so try your best to increase the number of reviews and convince every visitor to leave a review after their stay!\n",
    "\n",
    "However, there is a trap in this review system. You'll make a huge mistake if you think rating is not important! Hosts have been complaining about the airbnb rating system. Here's an example.  https://community.withairbnb.com/t5/Host-Voice/Agreed-Airbnb-s-rating-system-kinda-sucks/idi-p/573267\n",
    "\n",
    "Basically, because everyone's rating is so high, just one bad rating and review (especially when you don't have a lot of reviews yet) can dramatically change the 'level' of your property and therefore airbnb will probably give you warning for 'low' scores that indeed is not a bad score at all. Thus I personally think that number of reviews and rating are equally important for hosts.\n",
    "\n",
    "Next, let's explore some features that are not on the top 5 list."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(df['room_type'],palette='coolwarm') # see what type of room people prefer\n",
    "plt.title('Room type counts');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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bytZ51nAxOLMwpZjx+YBVwJDgN+vYPnm4jnMohJCTsrMR4tpJwPfjIhXqRz0flnVcoOpHFD/CvAIleP3Ws54PJLKLtGHi3VfAbSc+HA+cD3wAHBve/Vl5pvAIVR2074A/BQ4sqq+VXErlZMJbgbOycwOXfQ3M5+hcsLFfwBzqYTwljN3Ty/W+ffiDNCbgO3bWo+kVReZq7JHQVJPUVxuYpvM/OyK5q2XiDgT2K7MNXaliGgA/gGsVZxQIKmb8SQBSd1aRGxMZZfs51Y0ryR1F+7ilNRtReWCus8C12Xm5BXNL0ndhbs4JUmSSsYeNEmSpJLp1segDRw4MBsaGupdhiRJ0gpNnTr1hcwc1JF5u3VAa2hoYMqUKfUuQ5IkaYUior27iSzFXZySJEklY0CTJEkqGQOaJElSyXTrY9AkSVLtLVy4kBkzZjB//vx6l9It9O3bly233JK11lprlddhQJMkSe2aMWMG66+/Pg0NDUREvcsptczkxRdfZMaMGQwZMmSV1+MuTkmS1K758+czYMAAw1kHRAQDBgxY7d5GA5okSVohw1nHdcZrZUCTJEkqGQOaJEnqlpqamthll11Wern3vve9rctfcsklnV1WpzCgSZKkHmHx4sUA3HHHHYABTZIk9UBNTU3ssMMOHHXUUQwfPpzDDjuMN954g5tvvpnddtuNYcOGccwxx7BgwQKgcgvH008/nZEjRzJy5EiefPJJAMaOHcsVV1zRut5+/fq1ua1Ro0ax++67s/vuu7eGsFtuuYX99tuPT3/60wwbNmyp5c844wxuu+02RowYwbnnnsuoUaO4//77W9e59957M23atNq8OCtgQJMkSTXz2GOPccIJJzBt2jT69+/PD37wA8aOHcukSZN48MEHWbRoET/72c9a5+/fvz933303p5xyCqeddlqHt7PJJptw4403cu+99zJp0iROPfXU1ml333033/72t3n44YeXWua73/1uaygbN24cxx13HBdeeCEAjz/+OAsWLGD48OGr9wKsIgOaJEmqma222oq9994bgM9+9rPcfPPNDBkyhO222w6Ao446ismTJ7fOP2bMmNbHO++8s8PbWbhwIccffzzDhg3j8MMPXyqMjRw5skPXJDv88MO55pprWLhwIRdccAFjx47t8PY7mxeq7SLjx4+nubmZwYMHM2HChHqXI0lSl1jZS05Uz98y3KdPH5YsWQJULgT75ptvvm25c889l0033ZQHHniAJUuW0Ldv39Zp6623Xoe2ve666/KBD3yAq666issuu4wpU6asVO2dyR60LtLc3MzMmTNpbm6udymSJHWZZ555prUn7NJLL+WAAw6gqamp9fiy3/zmN+yzzz6t80+aNKn18T3veQ9QOTZt6tSpAFx11VUsXLjwbdt5+eWX2WyzzejVqxe/+c1vWk8IaM/666/Pq6++ulTbcccdx6mnnsqee+7JxhtvvArPuHMY0CRJUs3suOOOTJw4keHDhzN37lzGjRvHr3/9aw4//HCGDRtGr169OOmkk1rnX7BgAXvttRc/+tGPOPfccwE4/vjjufXWWxk5ciR33XVXmz1iJ598MhMnTuTd7343jz/+eId6zYYPH06fPn3YddddW7e1xx570L9/f44++uhOegVWTWRmXQtYHY2NjVnP7seVceSRRzJz5ky22GILLrroonqXI0lShz3yyCPsuOOOK71cU1MTBx98MNOnT+/Q/A0NDUyZMoWBAweu9LY6y6xZs9h333159NFH6dVr1fux2nrNImJqZjZ2ZHl70CRJkoCLLrqIvfbai29/+9urFc46gycJSJKkmmhoaOhw7xlUetzq6cgjj+TII4+saw0t7EGTJEkqGQOaJElSyRjQJEmSSsaAJkmSVDKeJCBJklbKL699uVPXd9xBG6xwnn79+vHaa6916nbLzB40SZKkkrEHrdDZ3waW9cobS1ofa7mtjnwLkSSpu8pMxo8fz3XXXUdE8NWvfpUjjjiCk08+mQMPPJBDDjmEQw89lI022ogLLriAX/3qV/zjH//gW9/6Vr1LXyn2oEmSpG7j97//Pffffz8PPPAAN910E1/+8peZPXs2o0eP5rbbbgNg5syZPPzwwwDcfvvtjBo1qp4lrxIDmiRJ6jZuv/12xowZQ+/evdl0003ZZ599uOeeexg1ahS33XYbDz/8MDvttBObbrops2fP5s477+S9731vvcteae7ilCRJ3cby7iG+xRZb8NJLL/HnP/+Z0aNHM3fuXC677DL69evH+uuv38VVrj570CRJUrcxevRoJk2axOLFi5kzZw6TJ09m5MiRALznPe/hhz/8IaNHj2bUqFGcc8453XL3JtiDJkmSVlI9T0g79NBDufPOO9l1112JCCZMmMDgwYMBGDVqFDfccAPbbLMN73rXu5g7d64BTZIkqVZaroEWEZx99tmcffbZb5vn2GOP5dhjjwVgrbXW4vXXX+/SGjuTuzglSZJKpmYBLSIuiIjnI2J6VdukiLi/+GmKiPuL9oaImFc17ee1qkuSJKnsarmL80Lg/wIXtTRk5hEtwxHxfaD6iq1PZeaIGtYjSZLULdQsoGXm5IhoaGtaRATwSWD/Wm1fkiSpu6rXMWijgOcy84mqtiERcV9E3BoRyz3lIiJOiIgpETFlzpw5ta9UkiSpi9XrLM4xwKVV47OBd2bmixGxB/DHiNg5M19ZdsHMPA84D6CxsbHtq9WV0Hr9N1nqUZIkaXm6PKBFRB/gE8AeLW2ZuQBYUAxPjYingO2AKV1dX63sd9jX612CJEmd4umnnurU9Q3deutOXd+K7Lvvvpxzzjk0NjZy0EEHcckll7Dhhht2aQ0rUo8etAOARzNzRktDRAwC5mbm4ogYCmwLPF2H2iRJUg9y7bXX1ruENtXyMhuXAncC20fEjIg4tpj0KZbevQkwGpgWEQ8AVwAnZebcWtUmSZK6l6amJnbYYQeOO+44dtllFz7zmc9w0003sffee7Ptttty99138/rrr3PMMcew5557sttuu3HVVVcBMG/ePD71qU8xfPhwjjjiCObNm9e63oaGBl544QWamprYZZddWtvPOecczjrrLKDS4zZu3DhGjx7NjjvuyD333MMnPvEJtt12W7761a/W5PnW8izOMctpH9tG25XAlbWqRZIkdX9PPvkkl19+Oeeddx577rknl1xyCbfffjtXX3013/nOd9hpp53Yf//9ueCCC/jXv/7FyJEjOeCAA/jFL37Buuuuy7Rp05g2bRq77777Sm/7He94B5MnT+ZHP/oRH/vYx5g6dSobb7wxW2+9NePGjWPAgAGd+ly91ZMkSeoWhgwZwrBhwwDYeeedef/7309EMGzYMJqampgxYwZXX30155xzDgDz58/nmWeeYfLkyZx66qkADB8+nOHDh6/0tg855BAAhg0bxs4778xmm20GwNChQ3n22WcNaJIkqWdae+21W4d79erVOt6rVy8WLVpE7969ufLKK9l+++3ftmzlEqzL16dPH5YsWdI6Pn/+/Da3Xb3d6m13Nu/FKUmS1ggf+tCH+MlPfkJm5Spc9913HwCjR4/m4osvBmD69OlMmzbtbctuuummPP/887z44ossWLCAa665pusKb4M9aJIkaaV09WUxOuprX/sap512GsOHDyczaWho4JprruHzn/88Rx99NMOHD2fEiBGMHDnybcuutdZanHnmmey1114MGTKEHXbYoQ7P4C3RkjK7o8bGxpwypXMulfbLa19e8UzdwHEHbVDvEiRJa5hHHnmEHXfcsd5ldCttvWYRMTUzGzuyvLs4JUmSSsaAJkmSVDIGNEmSpJIxoEmSJJWMAU2SJKlkDGiSJEkl43XQJEnSSpk1cUKnrm/zo8avcJ6mpiYOPvhgpk+fvlT7mWeeyejRoznggAOWu+xZZ51Fv379+NKXvrTatXYVA5okSeq2vvnNb9a7hJpwF6ckSeoWFi9ezPHHH8/OO+/MBz/4QebNm8fYsWO54oorALj22mvZYYcdeN/73sepp57KwQcf3Lrsww8/zL777svQoUP58Y9/XK+n0GEGNEmS1C088cQTfOELX+Chhx5iww035Morr2ydNn/+fE488USuu+46br/9dubMmbPUso8++ijXX389d999N9/4xjdYuHBhV5e/UgxokiSpWxgyZAgjRowAYI899qCpqal12qOPPsrQoUMZMmQIAGPGjFlq2Y985COsvfbaDBw4kE022YTnnnuuy+peFR6Dpg4bP348zc3NDB48mAkTOvcAUUmSVmTttdduHe7duzfz5s1rHV/RvcWXXXbRokWdX2AnsgdNHdbc3MzMmTNpbm6udymSJC1lhx124Omnn27tVZs0aVJ9C1pN9qBJkqSV0pHLYnS1ddZZh5/+9KcceOCBDBw4kJEjR9a7pNViQJMkSaXX0NCw1DXQ2rqm2X777cejjz5KZvKFL3yBxsZGoHIdtGrLXkutjNzFKUmS1gjnn38+I0aMYOedd+bll1/mxBNPrHdJq8weNEmStEYYN24c48aNq3cZncIeNEmStEIrOktSb+mM18qAJkmS2tW3b19efPFFQ1oHZCYvvvgiffv2Xa31uItTkiS1a8stt2TGjBlvuzq/2ta3b1+23HLL1VqHAU2SJLVrrbXWar1Cv7qGuzglSZJKxoAmSZJUMu7iXMM8/dRTNVv3woULWx9ruZ2hW29ds3VLktQd2IMmSZJUMgY0SZKkkjGgSZIklUzNAlpEXBARz0fE9Kq2syJiZkTcX/wcVDXtKxHxZEQ8FhEfqlVdkiRJZVfL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\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,6))\n",
    "sns.barplot(df.room_type,df.price,hue=df.popularity, palette='coolwarm')\n",
    "plt.title('Popularity based on price');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From these two graphs, we can see that most of the listings are entire home or apartment. Interestingly, from the \n",
    "second graph left panel we can see that low-price entire home/apt are most popular and high-price entire home/apt are \n",
    "least popular. This indicates that most people prefer cheap but private place. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(df.popularity,hue=df.instant_bookable,palette='Set2')\n",
    "plt.title('Is the house/apt instantly bookable?')\n",
    "plt.legend(['No','Yes']);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,6))\n",
    "sns.countplot(df.popularity,hue=df.cancellation_policy,palette='Set2',\n",
    "              hue_order=['flexible','moderate','strict'])\n",
    "plt.title('Is the house/apt instantly bookable?');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Instant booking and cancellation policies were also examined. The properties with high popularity are open to\n",
    "instant bookings more than other properties, and their cancellation polity is moderate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(df.popularity,df.host_response_rate,palette='Set2')\n",
    "plt.title('Host response rate')\n",
    "plt.ylabel('Response rate');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 792x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(11,5))\n",
    "sns.countplot(df.popularity, hue=df.host_response_time,\n",
    "              order=['high','medium','low'],\n",
    "              hue_order=['within an hour','within a few hours','within a day','a few days or more'],\n",
    "              palette='Set2');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Properties in popularity groups tend to show similar response rate but slightly different response time. Most of the\n",
    "hosts do indeed respond within an hour of the inquiry, but the popular properties are more likely to do so than other\n",
    "properties.\n",
    "\n",
    "Finally, let's look at some popular amenities provided in the properties."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'{TV,\"Cable TV\",Internet,\"Wireless Internet\",\"Air Conditioning\",Kitchen,Heating,\"Family/Kid Friendly\",Washer,Dryer}'"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.amenities[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Wireless Internet</th>\n",
       "      <td>3667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Heating</th>\n",
       "      <td>3627</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kitchen</th>\n",
       "      <td>3423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Smoke Detector</th>\n",
       "      <td>3281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Essentials</th>\n",
       "      <td>3237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dryer</th>\n",
       "      <td>2997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Washer</th>\n",
       "      <td>2992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Internet</th>\n",
       "      <td>2811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shampoo</th>\n",
       "      <td>2670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TV</th>\n",
       "      <td>2574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Carbon Monoxide Detector</th>\n",
       "      <td>2485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fire Extinguisher</th>\n",
       "      <td>2196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Free Parking on Premises</th>\n",
       "      <td>2167</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Family/Kid Friendly</th>\n",
       "      <td>1963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>First Aid Kit</th>\n",
       "      <td>1680</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             0\n",
       "Wireless Internet         3667\n",
       "Heating                   3627\n",
       "Kitchen                   3423\n",
       "Smoke Detector            3281\n",
       "Essentials                3237\n",
       "Dryer                     2997\n",
       "Washer                    2992\n",
       "Internet                  2811\n",
       "Shampoo                   2670\n",
       "TV                        2574\n",
       "Carbon Monoxide Detector  2485\n",
       "Fire Extinguisher         2196\n",
       "Free Parking on Premises  2167\n",
       "Family/Kid Friendly       1963\n",
       "First Aid Kit             1680"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# see most popular amenities\n",
    "\n",
    "df.amenities = df.amenities.apply(lambda x: x if x is np.NAN else x[1:-1].replace('\"','').split(','))\n",
    "\n",
    "from collections import Counter\n",
    "df.ame_counts = df.amenities.apply(lambda x: Counter(x))\n",
    "\n",
    "items = Counter()\n",
    "for item in df.ame_counts:\n",
    "    items = items + item\n",
    "    \n",
    "pd.DataFrame.from_dict(items, orient='index').sort_values(0,ascending=False)[:15]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The top 15 popular amaneties are listed above. Some are really basic, such as internet and smoke detector, while some\n",
    "are not easily seen in a regular hotel, for example the first aid kit."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In summary, in this notebook, I tried to analyze what makes an airbnb property popular than others. Like I mentioned\n",
    "earlier, the sales would have been the best measure in the analysis; but unfortunately, there is no easy and \n",
    "straitforward way to calculate the sales from given dataset (I might be wrong, correct me if there is a way to do so).\n",
    "Therefore, I used the number of reviews each month to see what differs the popular properties from others. \n",
    "\n",
    "I first examined important features using feature importance analysis in random forest regressor, and used some graphs\n",
    "to visualize these features. Then I also looked at some other features that might be helpful for future improvement for\n",
    "the hosts. \n",
    "\n",
    "This analysis primarily focuses on features that can be improved/upgraded by the hosts, and this is why I did not \n",
    "include analysis about the neigbourhood etc. You can't just move to a popular neigbourbood because it's popular, right?\n",
    "\n",
    "Finally, I am a data enthusiast who just started to learn ds skills and coding, so any feedback is greatly appreciated!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
